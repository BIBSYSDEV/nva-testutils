plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id "nebula.lint" version "16.22.0"
}

repositories {
    jcenter()
}

def jupiterVersion = "5.6.1"
def jacksonVersion = "2.10.3"
def awsSdkVersion = "1.11.871"

dependencies {

    implementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.12'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sts', version: awsSdkVersion

    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: jacksonVersion
    implementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: jupiterVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'

}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        events('skipped', 'passed', 'failed')
    }
    Map<String, String> envVariables = new HashMap<>()
    envVariables.put("ALLOWED_ORIGIN", "*")
    environment(envVariables)
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = true
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

// jacoco configuration
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

